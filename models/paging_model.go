// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PagingModel PagingModel
//
// swagger:model PagingModel
type PagingModel struct {

	// direction
	// Required: true
	// Enum: [ASC DESC]
	Direction *string `json:"direction"`

	// page
	// Required: true
	Page *int32 `json:"page"`

	// size
	// Required: true
	Size *int32 `json:"size"`

	// sort
	// Required: true
	Sort *string `json:"sort"`

	// total elements
	// Required: true
	TotalElements *int64 `json:"totalElements"`

	// total pages
	// Required: true
	TotalPages *int32 `json:"totalPages"`
}

// Validate validates this paging model
func (m *PagingModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSort(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalElements(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPages(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var pagingModelTypeDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ASC","DESC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pagingModelTypeDirectionPropEnum = append(pagingModelTypeDirectionPropEnum, v)
	}
}

const (

	// PagingModelDirectionASC captures enum value "ASC"
	PagingModelDirectionASC string = "ASC"

	// PagingModelDirectionDESC captures enum value "DESC"
	PagingModelDirectionDESC string = "DESC"
)

// prop value enum
func (m *PagingModel) validateDirectionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, pagingModelTypeDirectionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PagingModel) validateDirection(formats strfmt.Registry) error {

	if err := validate.Required("direction", "body", m.Direction); err != nil {
		return err
	}

	// value enum
	if err := m.validateDirectionEnum("direction", "body", *m.Direction); err != nil {
		return err
	}

	return nil
}

func (m *PagingModel) validatePage(formats strfmt.Registry) error {

	if err := validate.Required("page", "body", m.Page); err != nil {
		return err
	}

	return nil
}

func (m *PagingModel) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

func (m *PagingModel) validateSort(formats strfmt.Registry) error {

	if err := validate.Required("sort", "body", m.Sort); err != nil {
		return err
	}

	return nil
}

func (m *PagingModel) validateTotalElements(formats strfmt.Registry) error {

	if err := validate.Required("totalElements", "body", m.TotalElements); err != nil {
		return err
	}

	return nil
}

func (m *PagingModel) validateTotalPages(formats strfmt.Registry) error {

	if err := validate.Required("totalPages", "body", m.TotalPages); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this paging model based on context it is used
func (m *PagingModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PagingModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PagingModel) UnmarshalBinary(b []byte) error {
	var res PagingModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
