// Code generated by go-swagger; DO NOT EDIT.

package block_transactions_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"dcn_sdk/models"
)

// GetBlockTransactionsUsingGETOKCode is the HTTP code returned for type GetBlockTransactionsUsingGETOK
const GetBlockTransactionsUsingGETOKCode int = 200

/*GetBlockTransactionsUsingGETOK OK

swagger:response getBlockTransactionsUsingGETOK
*/
type GetBlockTransactionsUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.LatestTransactionModel `json:"body,omitempty"`
}

// NewGetBlockTransactionsUsingGETOK creates GetBlockTransactionsUsingGETOK with default headers values
func NewGetBlockTransactionsUsingGETOK() *GetBlockTransactionsUsingGETOK {

	return &GetBlockTransactionsUsingGETOK{}
}

// WithPayload adds the payload to the get block transactions using g e t o k response
func (o *GetBlockTransactionsUsingGETOK) WithPayload(payload *models.LatestTransactionModel) *GetBlockTransactionsUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get block transactions using g e t o k response
func (o *GetBlockTransactionsUsingGETOK) SetPayload(payload *models.LatestTransactionModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBlockTransactionsUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBlockTransactionsUsingGETUnauthorizedCode is the HTTP code returned for type GetBlockTransactionsUsingGETUnauthorized
const GetBlockTransactionsUsingGETUnauthorizedCode int = 401

/*GetBlockTransactionsUsingGETUnauthorized Unauthorized

swagger:response getBlockTransactionsUsingGETUnauthorized
*/
type GetBlockTransactionsUsingGETUnauthorized struct {
}

// NewGetBlockTransactionsUsingGETUnauthorized creates GetBlockTransactionsUsingGETUnauthorized with default headers values
func NewGetBlockTransactionsUsingGETUnauthorized() *GetBlockTransactionsUsingGETUnauthorized {

	return &GetBlockTransactionsUsingGETUnauthorized{}
}

// WriteResponse to the client
func (o *GetBlockTransactionsUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetBlockTransactionsUsingGETForbiddenCode is the HTTP code returned for type GetBlockTransactionsUsingGETForbidden
const GetBlockTransactionsUsingGETForbiddenCode int = 403

/*GetBlockTransactionsUsingGETForbidden Forbidden

swagger:response getBlockTransactionsUsingGETForbidden
*/
type GetBlockTransactionsUsingGETForbidden struct {
}

// NewGetBlockTransactionsUsingGETForbidden creates GetBlockTransactionsUsingGETForbidden with default headers values
func NewGetBlockTransactionsUsingGETForbidden() *GetBlockTransactionsUsingGETForbidden {

	return &GetBlockTransactionsUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetBlockTransactionsUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetBlockTransactionsUsingGETNotFoundCode is the HTTP code returned for type GetBlockTransactionsUsingGETNotFound
const GetBlockTransactionsUsingGETNotFoundCode int = 404

/*GetBlockTransactionsUsingGETNotFound Not Found

swagger:response getBlockTransactionsUsingGETNotFound
*/
type GetBlockTransactionsUsingGETNotFound struct {
}

// NewGetBlockTransactionsUsingGETNotFound creates GetBlockTransactionsUsingGETNotFound with default headers values
func NewGetBlockTransactionsUsingGETNotFound() *GetBlockTransactionsUsingGETNotFound {

	return &GetBlockTransactionsUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetBlockTransactionsUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
