// Code generated by go-swagger; DO NOT EDIT.

package index_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// HomePageUsingGETHandlerFunc turns a function with the right signature into a home page using g e t handler
type HomePageUsingGETHandlerFunc func(HomePageUsingGETParams) middleware.Responder

// Handle executing the request and returning a response
func (fn HomePageUsingGETHandlerFunc) Handle(params HomePageUsingGETParams) middleware.Responder {
	return fn(params)
}

// HomePageUsingGETHandler interface for that can handle valid home page using g e t params
type HomePageUsingGETHandler interface {
	Handle(HomePageUsingGETParams) middleware.Responder
}

// NewHomePageUsingGET creates a new http.Handler for the home page using g e t operation
func NewHomePageUsingGET(ctx *middleware.Context, handler HomePageUsingGETHandler) *HomePageUsingGET {
	return &HomePageUsingGET{Context: ctx, Handler: handler}
}

/* HomePageUsingGET swagger:route GET / index-controller homePageUsingGET

Redirects to the API documentation page.

*/
type HomePageUsingGET struct {
	Context *middleware.Context
	Handler HomePageUsingGETHandler
}

func (o *HomePageUsingGET) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewHomePageUsingGETParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
