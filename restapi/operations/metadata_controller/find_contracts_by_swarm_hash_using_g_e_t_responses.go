// Code generated by go-swagger; DO NOT EDIT.

package metadata_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"dcn_sdk/models"
)

// FindContractsBySwarmHashUsingGETOKCode is the HTTP code returned for type FindContractsBySwarmHashUsingGETOK
const FindContractsBySwarmHashUsingGETOKCode int = 200

/*FindContractsBySwarmHashUsingGETOK OK

swagger:response findContractsBySwarmHashUsingGETOK
*/
type FindContractsBySwarmHashUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.LatestContractModel `json:"body,omitempty"`
}

// NewFindContractsBySwarmHashUsingGETOK creates FindContractsBySwarmHashUsingGETOK with default headers values
func NewFindContractsBySwarmHashUsingGETOK() *FindContractsBySwarmHashUsingGETOK {

	return &FindContractsBySwarmHashUsingGETOK{}
}

// WithPayload adds the payload to the find contracts by swarm hash using g e t o k response
func (o *FindContractsBySwarmHashUsingGETOK) WithPayload(payload *models.LatestContractModel) *FindContractsBySwarmHashUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find contracts by swarm hash using g e t o k response
func (o *FindContractsBySwarmHashUsingGETOK) SetPayload(payload *models.LatestContractModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindContractsBySwarmHashUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindContractsBySwarmHashUsingGETUnauthorizedCode is the HTTP code returned for type FindContractsBySwarmHashUsingGETUnauthorized
const FindContractsBySwarmHashUsingGETUnauthorizedCode int = 401

/*FindContractsBySwarmHashUsingGETUnauthorized Unauthorized

swagger:response findContractsBySwarmHashUsingGETUnauthorized
*/
type FindContractsBySwarmHashUsingGETUnauthorized struct {
}

// NewFindContractsBySwarmHashUsingGETUnauthorized creates FindContractsBySwarmHashUsingGETUnauthorized with default headers values
func NewFindContractsBySwarmHashUsingGETUnauthorized() *FindContractsBySwarmHashUsingGETUnauthorized {

	return &FindContractsBySwarmHashUsingGETUnauthorized{}
}

// WriteResponse to the client
func (o *FindContractsBySwarmHashUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// FindContractsBySwarmHashUsingGETForbiddenCode is the HTTP code returned for type FindContractsBySwarmHashUsingGETForbidden
const FindContractsBySwarmHashUsingGETForbiddenCode int = 403

/*FindContractsBySwarmHashUsingGETForbidden Forbidden

swagger:response findContractsBySwarmHashUsingGETForbidden
*/
type FindContractsBySwarmHashUsingGETForbidden struct {
}

// NewFindContractsBySwarmHashUsingGETForbidden creates FindContractsBySwarmHashUsingGETForbidden with default headers values
func NewFindContractsBySwarmHashUsingGETForbidden() *FindContractsBySwarmHashUsingGETForbidden {

	return &FindContractsBySwarmHashUsingGETForbidden{}
}

// WriteResponse to the client
func (o *FindContractsBySwarmHashUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// FindContractsBySwarmHashUsingGETNotFoundCode is the HTTP code returned for type FindContractsBySwarmHashUsingGETNotFound
const FindContractsBySwarmHashUsingGETNotFoundCode int = 404

/*FindContractsBySwarmHashUsingGETNotFound Not Found

swagger:response findContractsBySwarmHashUsingGETNotFound
*/
type FindContractsBySwarmHashUsingGETNotFound struct {
}

// NewFindContractsBySwarmHashUsingGETNotFound creates FindContractsBySwarmHashUsingGETNotFound with default headers values
func NewFindContractsBySwarmHashUsingGETNotFound() *FindContractsBySwarmHashUsingGETNotFound {

	return &FindContractsBySwarmHashUsingGETNotFound{}
}

// WriteResponse to the client
func (o *FindContractsBySwarmHashUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
