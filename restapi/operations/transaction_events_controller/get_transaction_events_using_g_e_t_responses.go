// Code generated by go-swagger; DO NOT EDIT.

package transaction_events_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"dcn_sdk/models"
)

// GetTransactionEventsUsingGETOKCode is the HTTP code returned for type GetTransactionEventsUsingGETOK
const GetTransactionEventsUsingGETOKCode int = 200

/*GetTransactionEventsUsingGETOK OK

swagger:response getTransactionEventsUsingGETOK
*/
type GetTransactionEventsUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.EventsModel `json:"body,omitempty"`
}

// NewGetTransactionEventsUsingGETOK creates GetTransactionEventsUsingGETOK with default headers values
func NewGetTransactionEventsUsingGETOK() *GetTransactionEventsUsingGETOK {

	return &GetTransactionEventsUsingGETOK{}
}

// WithPayload adds the payload to the get transaction events using g e t o k response
func (o *GetTransactionEventsUsingGETOK) WithPayload(payload *models.EventsModel) *GetTransactionEventsUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get transaction events using g e t o k response
func (o *GetTransactionEventsUsingGETOK) SetPayload(payload *models.EventsModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTransactionEventsUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTransactionEventsUsingGETUnauthorizedCode is the HTTP code returned for type GetTransactionEventsUsingGETUnauthorized
const GetTransactionEventsUsingGETUnauthorizedCode int = 401

/*GetTransactionEventsUsingGETUnauthorized Unauthorized

swagger:response getTransactionEventsUsingGETUnauthorized
*/
type GetTransactionEventsUsingGETUnauthorized struct {
}

// NewGetTransactionEventsUsingGETUnauthorized creates GetTransactionEventsUsingGETUnauthorized with default headers values
func NewGetTransactionEventsUsingGETUnauthorized() *GetTransactionEventsUsingGETUnauthorized {

	return &GetTransactionEventsUsingGETUnauthorized{}
}

// WriteResponse to the client
func (o *GetTransactionEventsUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetTransactionEventsUsingGETForbiddenCode is the HTTP code returned for type GetTransactionEventsUsingGETForbidden
const GetTransactionEventsUsingGETForbiddenCode int = 403

/*GetTransactionEventsUsingGETForbidden Forbidden

swagger:response getTransactionEventsUsingGETForbidden
*/
type GetTransactionEventsUsingGETForbidden struct {
}

// NewGetTransactionEventsUsingGETForbidden creates GetTransactionEventsUsingGETForbidden with default headers values
func NewGetTransactionEventsUsingGETForbidden() *GetTransactionEventsUsingGETForbidden {

	return &GetTransactionEventsUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetTransactionEventsUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetTransactionEventsUsingGETNotFoundCode is the HTTP code returned for type GetTransactionEventsUsingGETNotFound
const GetTransactionEventsUsingGETNotFoundCode int = 404

/*GetTransactionEventsUsingGETNotFound Not Found

swagger:response getTransactionEventsUsingGETNotFound
*/
type GetTransactionEventsUsingGETNotFound struct {
}

// NewGetTransactionEventsUsingGETNotFound creates GetTransactionEventsUsingGETNotFound with default headers values
func NewGetTransactionEventsUsingGETNotFound() *GetTransactionEventsUsingGETNotFound {

	return &GetTransactionEventsUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetTransactionEventsUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
