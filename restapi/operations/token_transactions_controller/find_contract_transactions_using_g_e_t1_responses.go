// Code generated by go-swagger; DO NOT EDIT.

package token_transactions_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"dcn_sdk/models"
)

// FindContractTransactionsUsingGET1OKCode is the HTTP code returned for type FindContractTransactionsUsingGET1OK
const FindContractTransactionsUsingGET1OKCode int = 200

/*FindContractTransactionsUsingGET1OK OK

swagger:response findContractTransactionsUsingGET1OK
*/
type FindContractTransactionsUsingGET1OK struct {

	/*
	  In: Body
	*/
	Payload *models.LatestTransactionModel `json:"body,omitempty"`
}

// NewFindContractTransactionsUsingGET1OK creates FindContractTransactionsUsingGET1OK with default headers values
func NewFindContractTransactionsUsingGET1OK() *FindContractTransactionsUsingGET1OK {

	return &FindContractTransactionsUsingGET1OK{}
}

// WithPayload adds the payload to the find contract transactions using g e t1 o k response
func (o *FindContractTransactionsUsingGET1OK) WithPayload(payload *models.LatestTransactionModel) *FindContractTransactionsUsingGET1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find contract transactions using g e t1 o k response
func (o *FindContractTransactionsUsingGET1OK) SetPayload(payload *models.LatestTransactionModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindContractTransactionsUsingGET1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindContractTransactionsUsingGET1UnauthorizedCode is the HTTP code returned for type FindContractTransactionsUsingGET1Unauthorized
const FindContractTransactionsUsingGET1UnauthorizedCode int = 401

/*FindContractTransactionsUsingGET1Unauthorized Unauthorized

swagger:response findContractTransactionsUsingGET1Unauthorized
*/
type FindContractTransactionsUsingGET1Unauthorized struct {
}

// NewFindContractTransactionsUsingGET1Unauthorized creates FindContractTransactionsUsingGET1Unauthorized with default headers values
func NewFindContractTransactionsUsingGET1Unauthorized() *FindContractTransactionsUsingGET1Unauthorized {

	return &FindContractTransactionsUsingGET1Unauthorized{}
}

// WriteResponse to the client
func (o *FindContractTransactionsUsingGET1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// FindContractTransactionsUsingGET1ForbiddenCode is the HTTP code returned for type FindContractTransactionsUsingGET1Forbidden
const FindContractTransactionsUsingGET1ForbiddenCode int = 403

/*FindContractTransactionsUsingGET1Forbidden Forbidden

swagger:response findContractTransactionsUsingGET1Forbidden
*/
type FindContractTransactionsUsingGET1Forbidden struct {
}

// NewFindContractTransactionsUsingGET1Forbidden creates FindContractTransactionsUsingGET1Forbidden with default headers values
func NewFindContractTransactionsUsingGET1Forbidden() *FindContractTransactionsUsingGET1Forbidden {

	return &FindContractTransactionsUsingGET1Forbidden{}
}

// WriteResponse to the client
func (o *FindContractTransactionsUsingGET1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// FindContractTransactionsUsingGET1NotFoundCode is the HTTP code returned for type FindContractTransactionsUsingGET1NotFound
const FindContractTransactionsUsingGET1NotFoundCode int = 404

/*FindContractTransactionsUsingGET1NotFound Not Found

swagger:response findContractTransactionsUsingGET1NotFound
*/
type FindContractTransactionsUsingGET1NotFound struct {
}

// NewFindContractTransactionsUsingGET1NotFound creates FindContractTransactionsUsingGET1NotFound with default headers values
func NewFindContractTransactionsUsingGET1NotFound() *FindContractTransactionsUsingGET1NotFound {

	return &FindContractTransactionsUsingGET1NotFound{}
}

// WriteResponse to the client
func (o *FindContractTransactionsUsingGET1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
