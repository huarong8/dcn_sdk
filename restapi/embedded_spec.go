// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "web3labs.com Epirus explorer REST API.",
    "title": "Epirus explorer API for localhost",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "web3labs.com",
      "url": "https://www.web3labs.com/",
      "email": "hi@web3labs.com"
    },
    "license": {},
    "version": "master"
  },
  "host": "api:8090",
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "index-controller"
        ],
        "summary": "Redirects to the API documentation page.",
        "operationId": "homePageUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/accounts/{addressHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-controller"
        ],
        "summary": "Retrieve an account by its address hash.",
        "operationId": "getAccountUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the account.",
            "name": "addressHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/accounts/{addressHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-transactions-controller"
        ],
        "summary": "Retrieve a contract by its address hash.",
        "operationId": "findAccountTransactionsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/blocks": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "block-controller"
        ],
        "summary": "Retrieve blocks.",
        "operationId": "findBlocksUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "number",
              "timestampISO",
              "transactionCount"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestBlockModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/blocks/{blockHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "block-controller"
        ],
        "summary": "Retrieve a block by its hash.",
        "operationId": "getBlockUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The hash identifying the block.",
            "name": "blockHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlockModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/blocks/{blockHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "block-transactions-controller"
        ],
        "summary": "Retrieve all transactions for this block.",
        "operationId": "getBlockTransactionsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the block.",
            "name": "blockHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configuration/frontend": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "configuration-controller"
        ],
        "summary": "Epirus frontend configuration.",
        "operationId": "frontendConfigurationUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EpirusConfigurationModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-controller"
        ],
        "summary": "Retrieve contracts.",
        "operationId": "findContractsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "created",
              "lastExecuted",
              "transactionCount",
              "contractType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestContractModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts/{addressHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-controller"
        ],
        "summary": "Retrieve a contract by its address hash.",
        "operationId": "getContractUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContractModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts/{addressHash}/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-events-controller"
        ],
        "summary": "Retrieve all events for this contract.",
        "operationId": "getContractEventsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts/{addressHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-transactions-controller"
        ],
        "summary": "Retrieve contract transactions by its address hash.",
        "operationId": "findContractTransactionsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/tokens/totals": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-tokens-totals-controller"
        ],
        "summary": "Retrieve total number of different token types",
        "operationId": "getTokenTotalsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/totals": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-totals-controller"
        ],
        "summary": "Retrieve total number of Contracts, Tokens and Transactions.",
        "operationId": "getDashboardTotalsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/transactions/totals": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-transactions-totals-controller"
        ],
        "summary": "Retrieve total number of different transactions types",
        "operationId": "getTotalsUsingGET_1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/transactions/totals/{period}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-transactions-totals-controller"
        ],
        "summary": "Retrieve total number of different transactions types",
        "operationId": "getTotalsUsingGET",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "from",
            "name": "from",
            "in": "query"
          },
          {
            "enum": [
              "Nanos",
              "Micros",
              "Millis",
              "Seconds",
              "Minutes",
              "Hours",
              "HalfDays",
              "Days",
              "Weeks",
              "Months",
              "Years",
              "Decades",
              "Centuries",
              "Millennia",
              "Eras",
              "Forever"
            ],
            "type": "string",
            "description": "period",
            "name": "period",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "to",
            "name": "to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTimeseriesTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/error": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "index-controller"
        ],
        "summary": "Redirects to the API error page.",
        "operationId": "errorPageUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "events-controller"
        ],
        "summary": "Retrieve all events.",
        "operationId": "getEventsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/gas/price": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "gas-oracle-controller"
        ],
        "summary": "Gas price oracle.",
        "operationId": "gasPriceInfoUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GasPriceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/jwt": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "index-controller"
        ],
        "summary": "index",
        "operationId": "indexUsingGET",
        "parameters": [
          {
            "type": "object",
            "name": "claims",
            "in": "query"
          },
          {
            "type": "object",
            "name": "headers",
            "in": "query"
          },
          {
            "type": "string",
            "name": "tokenValue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Jwt"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mappings": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Retrieve Accounts",
        "operationId": "findAccountsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "address",
              "label"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestAccountMappingModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Add account with corresponding address and label",
        "operationId": "addAccountUsingPOST",
        "parameters": [
          {
            "description": "account",
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mappings/{id}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "getAccount",
        "operationId": "getAccountUsingGET_1",
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountMappingModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Edit account with corresponding address and label",
        "operationId": "editAccountUsingPUT",
        "parameters": [
          {
            "description": "account",
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditAccountMapping"
            }
          },
          {
            "type": "string",
            "description": "Label to be mapped",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Delete account with corresponding address",
        "operationId": "deleteAccountUsingDELETE",
        "parameters": [
          {
            "type": "string",
            "description": "Account address to be mapped",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/metadata": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "list metadata.",
        "operationId": "findMetadataUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "MetadataName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListMetadataModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "uploadMetadata",
        "operationId": "uploadMetadataUsingPOST",
        "parameters": [
          {
            "type": "file",
            "description": "file",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/metadata/{fileId}/contracts": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "list contracts by swarmhash",
        "operationId": "findContractsBySwarmHashUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The file id of the metadata.",
            "name": "fileId",
            "in": "path"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "created",
              "lastExecuted",
              "transactionCount",
              "contractType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestContractModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/metadata/{swarmHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "Retrieve metadata.",
        "operationId": "getMetadataUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The swarm hash of the metadata.",
            "name": "swarmHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "Delete metadata.",
        "operationId": "deleteMetadataUsingDELETE",
        "parameters": [
          {
            "type": "string",
            "description": "The swarm hash of the metadata.",
            "name": "swarmHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/node/details": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "node-controller"
        ],
        "summary": "Node details.",
        "operationId": "detailsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NodeInfoModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/search": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "search-controller"
        ],
        "summary": "Retrieve blocks, transactions, accounts by hash.",
        "operationId": "searchUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The search query string.",
            "name": "query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSearchResultModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/search/": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "search-controller"
        ],
        "summary": "Retrieve blocks, transactions, accounts by hash.",
        "operationId": "searchUsingGET_1",
        "parameters": [
          {
            "type": "string",
            "description": "The search query string.",
            "name": "query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSearchResultModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-controller"
        ],
        "summary": "Retrieve token contracts.",
        "operationId": "findTokensUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "created",
              "lastExecuted",
              "transactionCount",
              "contractType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListTokenModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-controller"
        ],
        "summary": "Retrieve a token by its address hash.",
        "operationId": "getTokenUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/erc20/transfers": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "erc-20-transfers-controller"
        ],
        "summary": "Retrieve transfers of an ERC20 Token.",
        "operationId": "findERC20TransfersUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "functionName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestERC20TransfersModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/erc721/transfers": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "erc-721-transfers-controller"
        ],
        "summary": "Retrieve transfers of an ERC721 Token.",
        "operationId": "findERC721TransfersUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "functionName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestERC721TransfersModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/erc777/transfers": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "erc-777-transfers-controller"
        ],
        "summary": "Retrieve transfers of an ERC777 Token.",
        "operationId": "findERC777TransfersUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "functionName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestERC777TransfersModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-events-controller"
        ],
        "summary": "Retrieve all token events using token address.",
        "operationId": "getTokenEventsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-transactions-controller"
        ],
        "summary": "Retrieve token transactions by token address hash.",
        "operationId": "findContractTransactionsUsingGET_1",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "transaction-controller"
        ],
        "summary": "Retrieve transactions by address or block.",
        "operationId": "findTransactionsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transactions/{transactionHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "transaction-controller"
        ],
        "summary": "Retrieve a transaction by its hash.",
        "operationId": "getTransactionUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The hash identifying the transaction.",
            "name": "transactionHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transactions/{transactionHash}/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "transaction-events-controller"
        ],
        "summary": "Retrieve all events for this transaction.",
        "operationId": "getTransactionEventsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The transaction hash identifying the transaction that contains the events.",
            "name": "transactionHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountMappingModel": {
      "type": "object",
      "title": "AccountMappingModel",
      "required": [
        "address",
        "label"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "AccountModel": {
      "type": "object",
      "title": "AccountModel",
      "required": [
        "address",
        "balance",
        "ethBalance",
        "links",
        "transactions"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "balance": {
          "type": "integer"
        },
        "ethBalance": {
          "type": "number"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactions": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BlockModel": {
      "type": "object",
      "title": "BlockModel",
      "required": [
        "dateVerified",
        "difficulty",
        "extraData",
        "gasLimit",
        "gasUsed",
        "hash",
        "logsBloom",
        "miner",
        "number",
        "parentHash",
        "receiptRoot",
        "sha3Uncles",
        "size",
        "stateRoot",
        "timestampISO",
        "timestampVerifiedISO",
        "totalDifficulty",
        "transactionCount",
        "transactionsRoot",
        "uncles"
      ],
      "properties": {
        "dateVerified": {
          "type": "integer",
          "format": "int64"
        },
        "difficulty": {
          "type": "integer"
        },
        "extraData": {
          "type": "string"
        },
        "gasLimit": {
          "type": "integer"
        },
        "gasUsed": {
          "type": "integer"
        },
        "hash": {
          "type": "string"
        },
        "logsBloom": {
          "type": "string"
        },
        "miner": {
          "type": "string"
        },
        "mixHash": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        },
        "parentHash": {
          "type": "string"
        },
        "receiptRoot": {
          "type": "string"
        },
        "sha3Uncles": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "stateRoot": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "timestampVerifiedISO": {
          "type": "string"
        },
        "totalDifficulty": {
          "type": "integer"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int32"
        },
        "transactionsRoot": {
          "type": "string"
        },
        "uncles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BlockRowModel": {
      "type": "object",
      "title": "BlockRowModel",
      "required": [
        "hash",
        "number",
        "timestampISO",
        "transactionCount"
      ],
      "properties": {
        "hash": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        },
        "timestampISO": {
          "type": "string"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContractModel": {
      "type": "object",
      "title": "ContractModel",
      "required": [
        "balance",
        "contractAddress",
        "contractCreator",
        "contractType",
        "createdBlockHash",
        "createdBlockNumber",
        "createdTimestampISO",
        "createdTransactionHash",
        "ethBalance",
        "fileId",
        "isPrivate",
        "links",
        "transactionCount"
      ],
      "properties": {
        "balance": {
          "type": "integer"
        },
        "contractAddress": {
          "type": "string"
        },
        "contractCreator": {
          "type": "string"
        },
        "contractType": {
          "type": "string"
        },
        "createdBlockHash": {
          "type": "string"
        },
        "createdBlockNumber": {
          "type": "integer",
          "format": "int64"
        },
        "createdTimestampISO": {
          "type": "string"
        },
        "createdTransactionHash": {
          "type": "string"
        },
        "ethBalance": {
          "type": "number"
        },
        "fileId": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ContractRowModel": {
      "type": "object",
      "title": "ContractRowModel",
      "required": [
        "address",
        "contractType",
        "createdTimestampISO",
        "createdTransaction",
        "lastExecutedTimestampISO",
        "lastExecutedTransaction",
        "links",
        "transactionCount"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "contractType": {
          "type": "string"
        },
        "createdTimestampISO": {
          "type": "string"
        },
        "createdTransaction": {
          "type": "string"
        },
        "lastExecutedTimestampISO": {
          "type": "string"
        },
        "lastExecutedTransaction": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateAccountMapping": {
      "type": "object",
      "title": "CreateAccountMapping",
      "required": [
        "address",
        "label"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "DashboardTimeseriesTotalsModel": {
      "type": "object",
      "title": "DashboardTimeseriesTotalsModel",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TotalModel"
          }
        }
      }
    },
    "DashboardTotalsModel": {
      "type": "object",
      "title": "DashboardTotalsModel",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TotalModel"
          }
        }
      }
    },
    "ERC20TransactionRowModel": {
      "type": "object",
      "title": "ERC20TransactionRowModel",
      "required": [
        "from",
        "fromLinks",
        "hash",
        "quantity",
        "quantityRaw",
        "timestampISO",
        "to",
        "toLinks"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "hash": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "quantityRaw": {
          "type": "number"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "ERC721TransactionRowModel": {
      "type": "object",
      "title": "ERC721TransactionRowModel",
      "required": [
        "from",
        "fromLinks",
        "hash",
        "timestampISO",
        "to",
        "toLinks",
        "tokenId"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "hash": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "tokenId": {
          "type": "string"
        }
      }
    },
    "ERC777TransactionRowModel": {
      "type": "object",
      "title": "ERC777TransactionRowModel",
      "required": [
        "amount",
        "amountRaw",
        "from",
        "fromLinks",
        "hash",
        "timestampISO",
        "to",
        "toLinks"
      ],
      "properties": {
        "amount": {
          "type": "string"
        },
        "amountRaw": {
          "type": "number"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "hash": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "EditAccountMapping": {
      "type": "object",
      "title": "EditAccountMapping",
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string"
        }
      }
    },
    "EpirusConfigurationModel": {
      "type": "object",
      "title": "EpirusConfigurationModel",
      "required": [
        "logoUrl"
      ],
      "properties": {
        "logoUrl": {
          "type": "string"
        }
      }
    },
    "EventParameters": {
      "type": "object",
      "title": "EventParameters",
      "required": [
        "name",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "EventsModel": {
      "type": "object",
      "title": "EventsModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionEventModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "File": {
      "type": "object",
      "title": "File",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "$ref": "#/definitions/File"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "$ref": "#/definitions/File"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "executable": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "lastModified": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "$ref": "#/definitions/File"
        },
        "path": {
          "type": "string"
        },
        "readable": {
          "type": "boolean"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        },
        "writable": {
          "type": "boolean"
        }
      }
    },
    "FunctionMeta": {
      "type": "object",
      "title": "FunctionMeta",
      "required": [
        "functionName",
        "params",
        "stateMutability",
        "type"
      ],
      "properties": {
        "functionName": {
          "type": "string"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionParameterModel"
          }
        },
        "stateMutability": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FunctionParameterModel": {
      "type": "object",
      "title": "FunctionParameterModel",
      "required": [
        "name",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "GasPriceModel": {
      "type": "object",
      "title": "GasPriceModel",
      "required": [
        "gasPrice",
        "high",
        "safeLow"
      ],
      "properties": {
        "gasPrice": {
          "type": "number"
        },
        "high": {
          "type": "number"
        },
        "safeLow": {
          "type": "number"
        }
      }
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "Jwt": {
      "type": "object",
      "title": "Jwt",
      "properties": {
        "audience": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "claims": {
          "type": "object"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "headers": {
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "issuedAt": {
          "type": "string",
          "format": "date-time"
        },
        "issuer": {
          "$ref": "#/definitions/URL"
        },
        "notBefore": {
          "type": "string",
          "format": "date-time"
        },
        "subject": {
          "type": "string"
        },
        "tokenValue": {
          "type": "string"
        }
      }
    },
    "LatestAccountMappingModel": {
      "type": "object",
      "title": "LatestAccountMappingModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountMappingModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestBlockModel": {
      "type": "object",
      "title": "LatestBlockModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestContractModel": {
      "type": "object",
      "title": "LatestContractModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestERC20TransfersModel": {
      "type": "object",
      "title": "LatestERC20TransfersModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ERC20TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestERC721TransfersModel": {
      "type": "object",
      "title": "LatestERC721TransfersModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ERC721TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestERC777TransfersModel": {
      "type": "object",
      "title": "LatestERC777TransfersModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ERC777TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestTransactionModel": {
      "type": "object",
      "title": "LatestTransactionModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "Link": {
      "type": "object",
      "title": "Link",
      "required": [
        "display",
        "href",
        "rel"
      ],
      "properties": {
        "display": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        }
      }
    },
    "ListMetadataModel": {
      "type": "object",
      "title": "ListMetadataModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "ListSearchResultModel": {
      "type": "object",
      "title": "ListSearchResultModel",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchRecommendation"
          }
        }
      }
    },
    "ListTokenModel": {
      "type": "object",
      "title": "ListTokenModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "Log": {
      "type": "object",
      "title": "Log",
      "properties": {
        "address": {
          "type": "string"
        },
        "blockHash": {
          "type": "string"
        },
        "blockNumber": {
          "type": "integer"
        },
        "blockNumberRaw": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "logIndex": {
          "type": "integer"
        },
        "logIndexRaw": {
          "type": "string"
        },
        "removed": {
          "type": "boolean"
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transactionHash": {
          "type": "string"
        },
        "transactionIndex": {
          "type": "integer"
        },
        "transactionIndexRaw": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MetadataModel": {
      "type": "object",
      "title": "MetadataModel",
      "required": [
        "contractCount",
        "fileId",
        "links",
        "name"
      ],
      "properties": {
        "contractCount": {
          "type": "integer",
          "format": "int64"
        },
        "fileId": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NodeInfoModel": {
      "type": "object",
      "title": "NodeInfoModel",
      "required": [
        "address",
        "enode",
        "id",
        "name",
        "peerCount",
        "peers"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "enode": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "peerCount": {
          "type": "integer",
          "format": "int32"
        },
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeersModel"
          }
        }
      }
    },
    "PagingModel": {
      "type": "object",
      "title": "PagingModel",
      "required": [
        "direction",
        "page",
        "size",
        "sort",
        "totalElements",
        "totalPages"
      ],
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "string"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PeersModel": {
      "type": "object",
      "title": "PeersModel",
      "required": [
        "address",
        "id",
        "name"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      }
    },
    "SearchRecommendation": {
      "type": "object",
      "title": "SearchRecommendation",
      "required": [
        "link",
        "type"
      ],
      "properties": {
        "link": {
          "$ref": "#/definitions/Link"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TokenModel": {
      "type": "object",
      "title": "TokenModel",
      "required": [
        "address",
        "contractType",
        "lastExecutedTimestampISO",
        "transactionCount"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "contractType": {
          "type": "string"
        },
        "decimals": {
          "type": "integer",
          "format": "int32"
        },
        "lastExecutedTimestampISO": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "totalSupply": {
          "type": "number"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TotalModel": {
      "type": "object",
      "title": "TotalModel",
      "required": [
        "fromTimestampISO",
        "links",
        "name",
        "toTimestampISO",
        "total"
      ],
      "properties": {
        "fromTimestampISO": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "name": {
          "type": "string"
        },
        "toTimestampISO": {
          "type": "string"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TransactionEventModel": {
      "type": "object",
      "title": "TransactionEventModel",
      "required": [
        "address",
        "addressLinks",
        "blockNumber",
        "eventName",
        "from",
        "fromLinks",
        "links",
        "parameters",
        "timestampISO",
        "to",
        "toLinks",
        "transactionHash"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "addressLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "blockNumber": {
          "type": "integer",
          "format": "int64"
        },
        "eventName": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParameters"
          }
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionHash": {
          "type": "string"
        }
      }
    },
    "TransactionModel": {
      "type": "object",
      "title": "TransactionModel",
      "required": [
        "blockHash",
        "blockNumber",
        "cumulativeGasUsed",
        "ethValue",
        "from",
        "fromLinks",
        "gas",
        "gasPrice",
        "gasUsed",
        "hash",
        "input",
        "isPrivate",
        "logs",
        "logsBloom",
        "r",
        "s",
        "timestampISO",
        "to",
        "toLinks",
        "transactionIndex",
        "transactionType",
        "v",
        "value",
        "verifiedTimestampISO"
      ],
      "properties": {
        "blockHash": {
          "type": "string"
        },
        "blockNumber": {
          "type": "integer",
          "format": "int64"
        },
        "cumulativeGasUsed": {
          "type": "integer"
        },
        "ethValue": {
          "type": "number"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "functionMeta": {
          "$ref": "#/definitions/FunctionMeta"
        },
        "gas": {
          "type": "integer"
        },
        "gasPrice": {
          "type": "integer"
        },
        "gasUsed": {
          "type": "integer"
        },
        "hash": {
          "type": "string"
        },
        "input": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          }
        },
        "logsBloom": {
          "type": "string"
        },
        "r": {
          "type": "string"
        },
        "s": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionIndex": {
          "type": "integer",
          "format": "int64"
        },
        "transactionType": {
          "type": "string",
          "enum": [
            "Transfer",
            "ContractCreation",
            "ContractCall"
          ]
        },
        "v": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "integer"
        },
        "verifiedTimestampISO": {
          "type": "string"
        }
      }
    },
    "TransactionRowModel": {
      "type": "object",
      "title": "TransactionRowModel",
      "required": [
        "direction",
        "ethValue",
        "from",
        "fromLinks",
        "hash",
        "isPrivate",
        "timestampISO",
        "to",
        "toLinks",
        "transactionType",
        "value"
      ],
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "In",
            "Out",
            "Self",
            "Unknown"
          ]
        },
        "ethValue": {
          "type": "number"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "functionMeta": {
          "$ref": "#/definitions/FunctionMeta"
        },
        "hash": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionType": {
          "type": "string",
          "enum": [
            "Transfer",
            "ContractCreation",
            "ContractCall"
          ]
        },
        "value": {
          "type": "integer"
        }
      }
    },
    "URI": {
      "type": "object",
      "title": "URI",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URL": {
      "type": "object",
      "title": "URL",
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "deserializedFields": {
          "$ref": "#/definitions/URLStreamHandler"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "serializedHashCode": {
          "type": "integer",
          "format": "int32"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URLStreamHandler": {
      "type": "object",
      "title": "URLStreamHandler"
    }
  },
  "tags": [
    {
      "description": "Account Controller",
      "name": "account-controller"
    },
    {
      "description": "Account Mapping Controller",
      "name": "account-mapping-controller"
    },
    {
      "description": "Account Transactions Controller",
      "name": "account-transactions-controller"
    },
    {
      "description": "Block Controller",
      "name": "block-controller"
    },
    {
      "description": "Block Transactions Controller",
      "name": "block-transactions-controller"
    },
    {
      "description": "Configuration Controller",
      "name": "configuration-controller"
    },
    {
      "description": "Contract Controller",
      "name": "contract-controller"
    },
    {
      "description": "Contract Events Controller",
      "name": "contract-events-controller"
    },
    {
      "description": "Contract Transactions Controller",
      "name": "contract-transactions-controller"
    },
    {
      "description": "Dashboard Tokens Totals Controller",
      "name": "dashboard-tokens-totals-controller"
    },
    {
      "description": "Dashboard Totals Controller",
      "name": "dashboard-totals-controller"
    },
    {
      "description": "Dashboard Transactions Totals Controller",
      "name": "dashboard-transactions-totals-controller"
    },
    {
      "description": "ERC 20 Transfers Controller",
      "name": "erc-20-transfers-controller"
    },
    {
      "description": "ERC 721 Transfers Controller",
      "name": "erc-721-transfers-controller"
    },
    {
      "description": "ERC 777 Transfers Controller",
      "name": "erc-777-transfers-controller"
    },
    {
      "description": "Events Controller",
      "name": "events-controller"
    },
    {
      "description": "Gas Oracle Controller",
      "name": "gas-oracle-controller"
    },
    {
      "description": "Index Controller",
      "name": "index-controller"
    },
    {
      "description": "Metadata Controller",
      "name": "metadata-controller"
    },
    {
      "description": "Node Controller",
      "name": "node-controller"
    },
    {
      "description": "Search Controller",
      "name": "search-controller"
    },
    {
      "description": "Token Controller",
      "name": "token-controller"
    },
    {
      "description": "Token Events Controller",
      "name": "token-events-controller"
    },
    {
      "description": "Token Transactions Controller",
      "name": "token-transactions-controller"
    },
    {
      "description": "Transaction Controller",
      "name": "transaction-controller"
    },
    {
      "description": "Transaction Events Controller",
      "name": "transaction-events-controller"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "web3labs.com Epirus explorer REST API.",
    "title": "Epirus explorer API for localhost",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "web3labs.com",
      "url": "https://www.web3labs.com/",
      "email": "hi@web3labs.com"
    },
    "license": {},
    "version": "master"
  },
  "host": "api:8090",
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "index-controller"
        ],
        "summary": "Redirects to the API documentation page.",
        "operationId": "homePageUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/accounts/{addressHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-controller"
        ],
        "summary": "Retrieve an account by its address hash.",
        "operationId": "getAccountUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the account.",
            "name": "addressHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/accounts/{addressHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-transactions-controller"
        ],
        "summary": "Retrieve a contract by its address hash.",
        "operationId": "findAccountTransactionsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/blocks": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "block-controller"
        ],
        "summary": "Retrieve blocks.",
        "operationId": "findBlocksUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "number",
              "timestampISO",
              "transactionCount"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestBlockModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/blocks/{blockHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "block-controller"
        ],
        "summary": "Retrieve a block by its hash.",
        "operationId": "getBlockUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The hash identifying the block.",
            "name": "blockHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlockModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/blocks/{blockHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "block-transactions-controller"
        ],
        "summary": "Retrieve all transactions for this block.",
        "operationId": "getBlockTransactionsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the block.",
            "name": "blockHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configuration/frontend": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "configuration-controller"
        ],
        "summary": "Epirus frontend configuration.",
        "operationId": "frontendConfigurationUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EpirusConfigurationModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-controller"
        ],
        "summary": "Retrieve contracts.",
        "operationId": "findContractsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "created",
              "lastExecuted",
              "transactionCount",
              "contractType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestContractModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts/{addressHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-controller"
        ],
        "summary": "Retrieve a contract by its address hash.",
        "operationId": "getContractUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContractModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts/{addressHash}/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-events-controller"
        ],
        "summary": "Retrieve all events for this contract.",
        "operationId": "getContractEventsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/contracts/{addressHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "contract-transactions-controller"
        ],
        "summary": "Retrieve contract transactions by its address hash.",
        "operationId": "findContractTransactionsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/tokens/totals": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-tokens-totals-controller"
        ],
        "summary": "Retrieve total number of different token types",
        "operationId": "getTokenTotalsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/totals": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-totals-controller"
        ],
        "summary": "Retrieve total number of Contracts, Tokens and Transactions.",
        "operationId": "getDashboardTotalsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/transactions/totals": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-transactions-totals-controller"
        ],
        "summary": "Retrieve total number of different transactions types",
        "operationId": "getTotalsUsingGET_1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/transactions/totals/{period}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "dashboard-transactions-totals-controller"
        ],
        "summary": "Retrieve total number of different transactions types",
        "operationId": "getTotalsUsingGET",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "from",
            "name": "from",
            "in": "query"
          },
          {
            "enum": [
              "Nanos",
              "Micros",
              "Millis",
              "Seconds",
              "Minutes",
              "Hours",
              "HalfDays",
              "Days",
              "Weeks",
              "Months",
              "Years",
              "Decades",
              "Centuries",
              "Millennia",
              "Eras",
              "Forever"
            ],
            "type": "string",
            "description": "period",
            "name": "period",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "to",
            "name": "to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DashboardTimeseriesTotalsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/error": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "index-controller"
        ],
        "summary": "Redirects to the API error page.",
        "operationId": "errorPageUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "events-controller"
        ],
        "summary": "Retrieve all events.",
        "operationId": "getEventsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/gas/price": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "gas-oracle-controller"
        ],
        "summary": "Gas price oracle.",
        "operationId": "gasPriceInfoUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GasPriceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/jwt": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "index-controller"
        ],
        "summary": "index",
        "operationId": "indexUsingGET",
        "parameters": [
          {
            "type": "object",
            "name": "claims",
            "in": "query"
          },
          {
            "type": "object",
            "name": "headers",
            "in": "query"
          },
          {
            "type": "string",
            "name": "tokenValue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Jwt"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mappings": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Retrieve Accounts",
        "operationId": "findAccountsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "address",
              "label"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestAccountMappingModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Add account with corresponding address and label",
        "operationId": "addAccountUsingPOST",
        "parameters": [
          {
            "description": "account",
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mappings/{id}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "getAccount",
        "operationId": "getAccountUsingGET_1",
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountMappingModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Edit account with corresponding address and label",
        "operationId": "editAccountUsingPUT",
        "parameters": [
          {
            "description": "account",
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditAccountMapping"
            }
          },
          {
            "type": "string",
            "description": "Label to be mapped",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "account-mapping-controller"
        ],
        "summary": "Delete account with corresponding address",
        "operationId": "deleteAccountUsingDELETE",
        "parameters": [
          {
            "type": "string",
            "description": "Account address to be mapped",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/metadata": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "list metadata.",
        "operationId": "findMetadataUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "MetadataName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListMetadataModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "uploadMetadata",
        "operationId": "uploadMetadataUsingPOST",
        "parameters": [
          {
            "type": "file",
            "description": "file",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/metadata/{fileId}/contracts": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "list contracts by swarmhash",
        "operationId": "findContractsBySwarmHashUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The file id of the metadata.",
            "name": "fileId",
            "in": "path"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "created",
              "lastExecuted",
              "transactionCount",
              "contractType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestContractModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/metadata/{swarmHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "Retrieve metadata.",
        "operationId": "getMetadataUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The swarm hash of the metadata.",
            "name": "swarmHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "metadata-controller"
        ],
        "summary": "Delete metadata.",
        "operationId": "deleteMetadataUsingDELETE",
        "parameters": [
          {
            "type": "string",
            "description": "The swarm hash of the metadata.",
            "name": "swarmHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/node/details": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "node-controller"
        ],
        "summary": "Node details.",
        "operationId": "detailsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NodeInfoModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/search": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "search-controller"
        ],
        "summary": "Retrieve blocks, transactions, accounts by hash.",
        "operationId": "searchUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The search query string.",
            "name": "query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSearchResultModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/search/": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "search-controller"
        ],
        "summary": "Retrieve blocks, transactions, accounts by hash.",
        "operationId": "searchUsingGET_1",
        "parameters": [
          {
            "type": "string",
            "description": "The search query string.",
            "name": "query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSearchResultModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-controller"
        ],
        "summary": "Retrieve token contracts.",
        "operationId": "findTokensUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "created",
              "lastExecuted",
              "transactionCount",
              "contractType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListTokenModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-controller"
        ],
        "summary": "Retrieve a token by its address hash.",
        "operationId": "getTokenUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the contract.",
            "name": "addressHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/erc20/transfers": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "erc-20-transfers-controller"
        ],
        "summary": "Retrieve transfers of an ERC20 Token.",
        "operationId": "findERC20TransfersUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "functionName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestERC20TransfersModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/erc721/transfers": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "erc-721-transfers-controller"
        ],
        "summary": "Retrieve transfers of an ERC721 Token.",
        "operationId": "findERC721TransfersUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "functionName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestERC721TransfersModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/erc777/transfers": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "erc-777-transfers-controller"
        ],
        "summary": "Retrieve transfers of an ERC777 Token.",
        "operationId": "findERC777TransfersUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "functionName"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestERC777TransfersModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-events-controller"
        ],
        "summary": "Retrieve all token events using token address.",
        "operationId": "getTokenEventsUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokens/{addressHash}/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "token-transactions-controller"
        ],
        "summary": "Retrieve token transactions by token address hash.",
        "operationId": "findContractTransactionsUsingGET_1",
        "parameters": [
          {
            "type": "string",
            "description": "The address hash identifying the token.",
            "name": "addressHash",
            "in": "path"
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "transaction-controller"
        ],
        "summary": "Retrieve transactions by address or block.",
        "operationId": "findTransactionsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "blockNumber",
              "timestampISO",
              "transactionType",
              "functionName",
              "direction",
              "ethValue"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LatestTransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transactions/{transactionHash}": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "transaction-controller"
        ],
        "summary": "Retrieve a transaction by its hash.",
        "operationId": "getTransactionUsingGET",
        "parameters": [
          {
            "type": "string",
            "description": "The hash identifying the transaction.",
            "name": "transactionHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transactions/{transactionHash}/events": {
      "get": {
        "produces": [
          "*/*"
        ],
        "tags": [
          "transaction-events-controller"
        ],
        "summary": "Retrieve all events for this transaction.",
        "operationId": "getTransactionEventsUsingGET",
        "parameters": [
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "enum": [
              "timestampISO",
              "eventName",
              "logIndex",
              "transactionIndex",
              "paramName",
              "paramValue",
              "paramType"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The transaction hash identifying the transaction that contains the events.",
            "name": "transactionHash",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventsModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountMappingModel": {
      "type": "object",
      "title": "AccountMappingModel",
      "required": [
        "address",
        "label"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "AccountModel": {
      "type": "object",
      "title": "AccountModel",
      "required": [
        "address",
        "balance",
        "ethBalance",
        "links",
        "transactions"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "balance": {
          "type": "integer"
        },
        "ethBalance": {
          "type": "number"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactions": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BlockModel": {
      "type": "object",
      "title": "BlockModel",
      "required": [
        "dateVerified",
        "difficulty",
        "extraData",
        "gasLimit",
        "gasUsed",
        "hash",
        "logsBloom",
        "miner",
        "number",
        "parentHash",
        "receiptRoot",
        "sha3Uncles",
        "size",
        "stateRoot",
        "timestampISO",
        "timestampVerifiedISO",
        "totalDifficulty",
        "transactionCount",
        "transactionsRoot",
        "uncles"
      ],
      "properties": {
        "dateVerified": {
          "type": "integer",
          "format": "int64"
        },
        "difficulty": {
          "type": "integer"
        },
        "extraData": {
          "type": "string"
        },
        "gasLimit": {
          "type": "integer"
        },
        "gasUsed": {
          "type": "integer"
        },
        "hash": {
          "type": "string"
        },
        "logsBloom": {
          "type": "string"
        },
        "miner": {
          "type": "string"
        },
        "mixHash": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        },
        "parentHash": {
          "type": "string"
        },
        "receiptRoot": {
          "type": "string"
        },
        "sha3Uncles": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "stateRoot": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "timestampVerifiedISO": {
          "type": "string"
        },
        "totalDifficulty": {
          "type": "integer"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int32"
        },
        "transactionsRoot": {
          "type": "string"
        },
        "uncles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BlockRowModel": {
      "type": "object",
      "title": "BlockRowModel",
      "required": [
        "hash",
        "number",
        "timestampISO",
        "transactionCount"
      ],
      "properties": {
        "hash": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int64"
        },
        "timestampISO": {
          "type": "string"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContractModel": {
      "type": "object",
      "title": "ContractModel",
      "required": [
        "balance",
        "contractAddress",
        "contractCreator",
        "contractType",
        "createdBlockHash",
        "createdBlockNumber",
        "createdTimestampISO",
        "createdTransactionHash",
        "ethBalance",
        "fileId",
        "isPrivate",
        "links",
        "transactionCount"
      ],
      "properties": {
        "balance": {
          "type": "integer"
        },
        "contractAddress": {
          "type": "string"
        },
        "contractCreator": {
          "type": "string"
        },
        "contractType": {
          "type": "string"
        },
        "createdBlockHash": {
          "type": "string"
        },
        "createdBlockNumber": {
          "type": "integer",
          "format": "int64"
        },
        "createdTimestampISO": {
          "type": "string"
        },
        "createdTransactionHash": {
          "type": "string"
        },
        "ethBalance": {
          "type": "number"
        },
        "fileId": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ContractRowModel": {
      "type": "object",
      "title": "ContractRowModel",
      "required": [
        "address",
        "contractType",
        "createdTimestampISO",
        "createdTransaction",
        "lastExecutedTimestampISO",
        "lastExecutedTransaction",
        "links",
        "transactionCount"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "contractType": {
          "type": "string"
        },
        "createdTimestampISO": {
          "type": "string"
        },
        "createdTransaction": {
          "type": "string"
        },
        "lastExecutedTimestampISO": {
          "type": "string"
        },
        "lastExecutedTransaction": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateAccountMapping": {
      "type": "object",
      "title": "CreateAccountMapping",
      "required": [
        "address",
        "label"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "DashboardTimeseriesTotalsModel": {
      "type": "object",
      "title": "DashboardTimeseriesTotalsModel",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TotalModel"
          }
        }
      }
    },
    "DashboardTotalsModel": {
      "type": "object",
      "title": "DashboardTotalsModel",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TotalModel"
          }
        }
      }
    },
    "ERC20TransactionRowModel": {
      "type": "object",
      "title": "ERC20TransactionRowModel",
      "required": [
        "from",
        "fromLinks",
        "hash",
        "quantity",
        "quantityRaw",
        "timestampISO",
        "to",
        "toLinks"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "hash": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "quantityRaw": {
          "type": "number"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "ERC721TransactionRowModel": {
      "type": "object",
      "title": "ERC721TransactionRowModel",
      "required": [
        "from",
        "fromLinks",
        "hash",
        "timestampISO",
        "to",
        "toLinks",
        "tokenId"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "hash": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "tokenId": {
          "type": "string"
        }
      }
    },
    "ERC777TransactionRowModel": {
      "type": "object",
      "title": "ERC777TransactionRowModel",
      "required": [
        "amount",
        "amountRaw",
        "from",
        "fromLinks",
        "hash",
        "timestampISO",
        "to",
        "toLinks"
      ],
      "properties": {
        "amount": {
          "type": "string"
        },
        "amountRaw": {
          "type": "number"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "hash": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "EditAccountMapping": {
      "type": "object",
      "title": "EditAccountMapping",
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string"
        }
      }
    },
    "EpirusConfigurationModel": {
      "type": "object",
      "title": "EpirusConfigurationModel",
      "required": [
        "logoUrl"
      ],
      "properties": {
        "logoUrl": {
          "type": "string"
        }
      }
    },
    "EventParameters": {
      "type": "object",
      "title": "EventParameters",
      "required": [
        "name",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "EventsModel": {
      "type": "object",
      "title": "EventsModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionEventModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "File": {
      "type": "object",
      "title": "File",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "$ref": "#/definitions/File"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "$ref": "#/definitions/File"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "executable": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "lastModified": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "$ref": "#/definitions/File"
        },
        "path": {
          "type": "string"
        },
        "readable": {
          "type": "boolean"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        },
        "writable": {
          "type": "boolean"
        }
      }
    },
    "FunctionMeta": {
      "type": "object",
      "title": "FunctionMeta",
      "required": [
        "functionName",
        "params",
        "stateMutability",
        "type"
      ],
      "properties": {
        "functionName": {
          "type": "string"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionParameterModel"
          }
        },
        "stateMutability": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FunctionParameterModel": {
      "type": "object",
      "title": "FunctionParameterModel",
      "required": [
        "name",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "GasPriceModel": {
      "type": "object",
      "title": "GasPriceModel",
      "required": [
        "gasPrice",
        "high",
        "safeLow"
      ],
      "properties": {
        "gasPrice": {
          "type": "number"
        },
        "high": {
          "type": "number"
        },
        "safeLow": {
          "type": "number"
        }
      }
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "Jwt": {
      "type": "object",
      "title": "Jwt",
      "properties": {
        "audience": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "claims": {
          "type": "object"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "headers": {
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "issuedAt": {
          "type": "string",
          "format": "date-time"
        },
        "issuer": {
          "$ref": "#/definitions/URL"
        },
        "notBefore": {
          "type": "string",
          "format": "date-time"
        },
        "subject": {
          "type": "string"
        },
        "tokenValue": {
          "type": "string"
        }
      }
    },
    "LatestAccountMappingModel": {
      "type": "object",
      "title": "LatestAccountMappingModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountMappingModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestBlockModel": {
      "type": "object",
      "title": "LatestBlockModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestContractModel": {
      "type": "object",
      "title": "LatestContractModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestERC20TransfersModel": {
      "type": "object",
      "title": "LatestERC20TransfersModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ERC20TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestERC721TransfersModel": {
      "type": "object",
      "title": "LatestERC721TransfersModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ERC721TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestERC777TransfersModel": {
      "type": "object",
      "title": "LatestERC777TransfersModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ERC777TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "LatestTransactionModel": {
      "type": "object",
      "title": "LatestTransactionModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRowModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "Link": {
      "type": "object",
      "title": "Link",
      "required": [
        "display",
        "href",
        "rel"
      ],
      "properties": {
        "display": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        }
      }
    },
    "ListMetadataModel": {
      "type": "object",
      "title": "ListMetadataModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "ListSearchResultModel": {
      "type": "object",
      "title": "ListSearchResultModel",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchRecommendation"
          }
        }
      }
    },
    "ListTokenModel": {
      "type": "object",
      "title": "ListTokenModel",
      "required": [
        "data",
        "paging"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenModel"
          }
        },
        "paging": {
          "$ref": "#/definitions/PagingModel"
        }
      }
    },
    "Log": {
      "type": "object",
      "title": "Log",
      "properties": {
        "address": {
          "type": "string"
        },
        "blockHash": {
          "type": "string"
        },
        "blockNumber": {
          "type": "integer"
        },
        "blockNumberRaw": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "logIndex": {
          "type": "integer"
        },
        "logIndexRaw": {
          "type": "string"
        },
        "removed": {
          "type": "boolean"
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transactionHash": {
          "type": "string"
        },
        "transactionIndex": {
          "type": "integer"
        },
        "transactionIndexRaw": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MetadataModel": {
      "type": "object",
      "title": "MetadataModel",
      "required": [
        "contractCount",
        "fileId",
        "links",
        "name"
      ],
      "properties": {
        "contractCount": {
          "type": "integer",
          "format": "int64"
        },
        "fileId": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NodeInfoModel": {
      "type": "object",
      "title": "NodeInfoModel",
      "required": [
        "address",
        "enode",
        "id",
        "name",
        "peerCount",
        "peers"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "enode": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "peerCount": {
          "type": "integer",
          "format": "int32"
        },
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeersModel"
          }
        }
      }
    },
    "PagingModel": {
      "type": "object",
      "title": "PagingModel",
      "required": [
        "direction",
        "page",
        "size",
        "sort",
        "totalElements",
        "totalPages"
      ],
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "string"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PeersModel": {
      "type": "object",
      "title": "PeersModel",
      "required": [
        "address",
        "id",
        "name"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      }
    },
    "SearchRecommendation": {
      "type": "object",
      "title": "SearchRecommendation",
      "required": [
        "link",
        "type"
      ],
      "properties": {
        "link": {
          "$ref": "#/definitions/Link"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TokenModel": {
      "type": "object",
      "title": "TokenModel",
      "required": [
        "address",
        "contractType",
        "lastExecutedTimestampISO",
        "transactionCount"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "contractType": {
          "type": "string"
        },
        "decimals": {
          "type": "integer",
          "format": "int32"
        },
        "lastExecutedTimestampISO": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "totalSupply": {
          "type": "number"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TotalModel": {
      "type": "object",
      "title": "TotalModel",
      "required": [
        "fromTimestampISO",
        "links",
        "name",
        "toTimestampISO",
        "total"
      ],
      "properties": {
        "fromTimestampISO": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "name": {
          "type": "string"
        },
        "toTimestampISO": {
          "type": "string"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TransactionEventModel": {
      "type": "object",
      "title": "TransactionEventModel",
      "required": [
        "address",
        "addressLinks",
        "blockNumber",
        "eventName",
        "from",
        "fromLinks",
        "links",
        "parameters",
        "timestampISO",
        "to",
        "toLinks",
        "transactionHash"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "addressLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "blockNumber": {
          "type": "integer",
          "format": "int64"
        },
        "eventName": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParameters"
          }
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionHash": {
          "type": "string"
        }
      }
    },
    "TransactionModel": {
      "type": "object",
      "title": "TransactionModel",
      "required": [
        "blockHash",
        "blockNumber",
        "cumulativeGasUsed",
        "ethValue",
        "from",
        "fromLinks",
        "gas",
        "gasPrice",
        "gasUsed",
        "hash",
        "input",
        "isPrivate",
        "logs",
        "logsBloom",
        "r",
        "s",
        "timestampISO",
        "to",
        "toLinks",
        "transactionIndex",
        "transactionType",
        "v",
        "value",
        "verifiedTimestampISO"
      ],
      "properties": {
        "blockHash": {
          "type": "string"
        },
        "blockNumber": {
          "type": "integer",
          "format": "int64"
        },
        "cumulativeGasUsed": {
          "type": "integer"
        },
        "ethValue": {
          "type": "number"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "functionMeta": {
          "$ref": "#/definitions/FunctionMeta"
        },
        "gas": {
          "type": "integer"
        },
        "gasPrice": {
          "type": "integer"
        },
        "gasUsed": {
          "type": "integer"
        },
        "hash": {
          "type": "string"
        },
        "input": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          }
        },
        "logsBloom": {
          "type": "string"
        },
        "r": {
          "type": "string"
        },
        "s": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionIndex": {
          "type": "integer",
          "format": "int64"
        },
        "transactionType": {
          "type": "string",
          "enum": [
            "Transfer",
            "ContractCreation",
            "ContractCall"
          ]
        },
        "v": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "integer"
        },
        "verifiedTimestampISO": {
          "type": "string"
        }
      }
    },
    "TransactionRowModel": {
      "type": "object",
      "title": "TransactionRowModel",
      "required": [
        "direction",
        "ethValue",
        "from",
        "fromLinks",
        "hash",
        "isPrivate",
        "timestampISO",
        "to",
        "toLinks",
        "transactionType",
        "value"
      ],
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "In",
            "Out",
            "Self",
            "Unknown"
          ]
        },
        "ethValue": {
          "type": "number"
        },
        "from": {
          "type": "string"
        },
        "fromLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "functionMeta": {
          "$ref": "#/definitions/FunctionMeta"
        },
        "hash": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "timestampISO": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "transactionType": {
          "type": "string",
          "enum": [
            "Transfer",
            "ContractCreation",
            "ContractCall"
          ]
        },
        "value": {
          "type": "integer"
        }
      }
    },
    "URI": {
      "type": "object",
      "title": "URI",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URL": {
      "type": "object",
      "title": "URL",
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "deserializedFields": {
          "$ref": "#/definitions/URLStreamHandler"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "serializedHashCode": {
          "type": "integer",
          "format": "int32"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URLStreamHandler": {
      "type": "object",
      "title": "URLStreamHandler"
    }
  },
  "tags": [
    {
      "description": "Account Controller",
      "name": "account-controller"
    },
    {
      "description": "Account Mapping Controller",
      "name": "account-mapping-controller"
    },
    {
      "description": "Account Transactions Controller",
      "name": "account-transactions-controller"
    },
    {
      "description": "Block Controller",
      "name": "block-controller"
    },
    {
      "description": "Block Transactions Controller",
      "name": "block-transactions-controller"
    },
    {
      "description": "Configuration Controller",
      "name": "configuration-controller"
    },
    {
      "description": "Contract Controller",
      "name": "contract-controller"
    },
    {
      "description": "Contract Events Controller",
      "name": "contract-events-controller"
    },
    {
      "description": "Contract Transactions Controller",
      "name": "contract-transactions-controller"
    },
    {
      "description": "Dashboard Tokens Totals Controller",
      "name": "dashboard-tokens-totals-controller"
    },
    {
      "description": "Dashboard Totals Controller",
      "name": "dashboard-totals-controller"
    },
    {
      "description": "Dashboard Transactions Totals Controller",
      "name": "dashboard-transactions-totals-controller"
    },
    {
      "description": "ERC 20 Transfers Controller",
      "name": "erc-20-transfers-controller"
    },
    {
      "description": "ERC 721 Transfers Controller",
      "name": "erc-721-transfers-controller"
    },
    {
      "description": "ERC 777 Transfers Controller",
      "name": "erc-777-transfers-controller"
    },
    {
      "description": "Events Controller",
      "name": "events-controller"
    },
    {
      "description": "Gas Oracle Controller",
      "name": "gas-oracle-controller"
    },
    {
      "description": "Index Controller",
      "name": "index-controller"
    },
    {
      "description": "Metadata Controller",
      "name": "metadata-controller"
    },
    {
      "description": "Node Controller",
      "name": "node-controller"
    },
    {
      "description": "Search Controller",
      "name": "search-controller"
    },
    {
      "description": "Token Controller",
      "name": "token-controller"
    },
    {
      "description": "Token Events Controller",
      "name": "token-events-controller"
    },
    {
      "description": "Token Transactions Controller",
      "name": "token-transactions-controller"
    },
    {
      "description": "Transaction Controller",
      "name": "transaction-controller"
    },
    {
      "description": "Transaction Events Controller",
      "name": "transaction-events-controller"
    }
  ]
}`))
}
